---
stages:
  - lint
  - test
  - release

lint:
  stage: lint
  tags:
    - shacklyn
  image: registry.gitlab.com/bubblehouse/runner-base:1.2.1
  variables:
    POETRY_CACHE_DIR: .cache/pypoetry
    DJANGO_SETTINGS_MODULE: termiverse.settings.test
  script:
    - poetry install
    - poetry run pylint --fail-under=8 termiverse
  cache:
    paths:
      - .cache/pypoetry

test:
  stage: test
  tags:
    - shacklyn
  image: registry.gitlab.com/bubblehouse/runner-base:1.2.1
  variables:
    POETRY_CACHE_DIR: .cache/pypoetry
  script:
    - poetry install
    - poetry run pytest --junitxml=junit.xml --cov-report term --cov-report xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
      - junit.xml
  cache:
    paths:
      - .cache/pypoetry

release:
  stage: release
  tags:
    - shacklyn
  image: registry.gitlab.com/bubblehouse/runner-base:1.2.1
  variables:
    GIT_COMMITTER_EMAIL: phil@bubblehouse.org
    GIT_COMMITTER_NAME: Phil Christensen
    GIT_AUTHOR_EMAIL: phil@bubblehouse.org
    GIT_AUTHOR_NAME: Phil Christensen
    GIT_CREDENTIALS: philchristensen:${GITLAB_TOKEN}
    DOCKER_REGISTRY_USER: philchristensen
    DOCKER_REGISTRY_PASSWORD: ${GITLAB_TOKEN}
    DOCKER_BUILDKIT: 1
    POETRY_CACHE_DIR: .cache/pypoetry
  script:
    - npm install
    - docker buildx install
    - docker buildx create --bootstrap --use --name=$CI_PROJECT_NAME --driver=kubernetes '--driver-opt="nodeselector=kubernetes.io/arch=amd64"'
    - docker buildx create --bootstrap --append --name=$CI_PROJECT_NAME --driver=kubernetes '--driver-opt="nodeselector=kubernetes.io/arch=arm64","tolerations=key=kubernetes.io/arch,value=arm64,operator=Equal,effect=NoSchedule"'
    - npx semantic-release
  only:
    - main
  cache:
    paths:
      - .cache/pypoetry
      - node_modules/
